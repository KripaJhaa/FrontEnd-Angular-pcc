{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/stateServices.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,suCAAsuC,GAAG,8SAA8S,GAAG,2M;;;;;;;;;;;;;;;;;;ACAh/C;AAIK;AAY/C;IAGE,sBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAF9C,UAAK,GAAG,cAAc,CAAC;QACvB,oBAAe,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,kBAAkB,CAAC;IAC5C,CAAC;IAGnD,gCAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;YAC5C,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IAVU,YAAY;QAPxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAMkC,2DAAY;OAHnC,YAAY,CAaxB;IAAD,mBAAC;CAAA;AAbwB;;;;;;;;;;;;;;;;;;;;;;;AChBiC;AACjB;AACI;AACW;AACA;AACT;AAe/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACpBqB;AACgC;AAI3E,IAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACnE,CAAC;AAMF;IAGI,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,kCAAW,GAAX;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,6BAA6B,EAAE,WAAW,CAAC,CAAC;IACnF,CAAC;IAPQ,YAAY;QAJxB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;+EAK4B,+DAAU;OAH3B,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;ACbzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n<router-outlet></router-outlet>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"card\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"holder.js/100x180/\\\" alt=\\\"\\\">\\n    <div class=\\\"card-body\\\">\\n      <h4 class=\\\"card-title\\\">Form</h4>\\n      <div class=\\\"container\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\n            <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputPassword1\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"states\\\">states</label>\\n            <select class=\\\"form-control form-control-sm\\\" (click)=\\\"getStates()\\\" name=\\\"states\\\" id=\\\"states\\\">\\n              <option *ngFor=\\\"let i of states\\\">{{i}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Document\\\">Document Type</label>\\n            <select class=\\\"form-control form-control-sm\\\" name=\\\"states\\\" id=\\\"Document\\\">\\n              <option *ngFor=\\\"let i of typeOfdocuments\\\">{{i}}</option>\\n            </select>\\n          </div>\\n\\n\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </form>\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject } from '../../node_modules/rxjs';\nimport { Observable } from 'rxjs';\nimport { stateService } from './stateServices';\nimport { stateList } from './stateModel';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  title = 'FE-PCC-check';\n  typeOfdocuments = [\"Aadhar_card\", \"Voter_Card\", \"Passport\", \"ration_Card\", \"Electricity_Bill\"]\n  constructor(private stateService: stateService) { }\n  states: stateList[];\n\n  getStates() {\n    this.stateService.getSateList().subscribe((res) => {\n      this.states = res;\n    })\n  }\n\n\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { stateList } from './stateModel';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class stateService {\r\n\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getSateList(): Observable<stateList[]> {\r\n        return this.http.post<stateList[]>('http://localhost:8802/state', httpOptions);\r\n    }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}